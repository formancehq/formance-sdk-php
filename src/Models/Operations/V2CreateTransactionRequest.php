<?php

/**
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

declare(strict_types=1);

namespace formance\stack\Models\Operations;

use formance\stack\Models\Shared;
use formance\stack\Utils\SpeakeasyMetadata;
class V2CreateTransactionRequest
{
    /**
     * The request body must contain at least one of the following objects:
     *
     *   - `postings`: suitable for simple transactions
     *   - `script`: enabling more complex transactions with Numscript
     *
     *
     * @var Shared\V2PostTransaction $v2PostTransaction
     */
    #[SpeakeasyMetadata('request:mediaType=application/json')]
    public Shared\V2PostTransaction $v2PostTransaction;

    /**
     * Name of the ledger.
     *
     * @var string $ledger
     */
    #[SpeakeasyMetadata('pathParam:style=simple,explode=false,name=ledger')]
    public string $ledger;

    /**
     * Use an idempotency key
     *
     * @var ?string $idempotencyKey
     */
    #[SpeakeasyMetadata('header:style=simple,explode=false,name=Idempotency-Key')]
    public ?string $idempotencyKey = null;

    /**
     * Set the dryRun mode. dry run mode doesn't add the logs to the database or publish a message to the message broker.
     *
     * @var ?bool $dryRun
     */
    #[SpeakeasyMetadata('queryParam:style=form,explode=true,name=dryRun')]
    public ?bool $dryRun = null;

    /**
     * Disable balance checks when passing postings
     *
     * @var ?bool $force
     */
    #[SpeakeasyMetadata('queryParam:style=form,explode=true,name=force')]
    public ?bool $force = null;

    /**
     * @param  Shared\V2PostTransaction  $v2PostTransaction
     * @param  string  $ledger
     * @param  ?string  $idempotencyKey
     * @param  ?bool  $dryRun
     * @param  ?bool  $force
     * @phpstan-pure
     */
    public function __construct(Shared\V2PostTransaction $v2PostTransaction, string $ledger, ?string $idempotencyKey = null, ?bool $dryRun = null, ?bool $force = null)
    {
        $this->v2PostTransaction = $v2PostTransaction;
        $this->ledger = $ledger;
        $this->idempotencyKey = $idempotencyKey;
        $this->dryRun = $dryRun;
        $this->force = $force;
    }
}