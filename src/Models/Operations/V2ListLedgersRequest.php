<?php

/**
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

declare(strict_types=1);

namespace formance\stack\Models\Operations;

use formance\stack\Utils\SpeakeasyMetadata;
class V2ListLedgersRequest
{
    /**
     * $requestBody
     *
     * @var array<string, mixed> $requestBody
     */
    #[SpeakeasyMetadata('request:mediaType=application/json')]
    public array $requestBody;

    /**
     * Parameter used in pagination requests. Maximum page size is set to 15.
     *
     * Set to the value of next for the next page of results.
     * Set to the value of previous for the previous page of results.
     * No other parameters can be set when this parameter is set.
     *
     *
     * @var ?string $cursor
     */
    #[SpeakeasyMetadata('queryParam:style=form,explode=true,name=cursor')]
    public ?string $cursor = null;

    /**
     * The maximum number of results to return per page.
     *
     *
     *
     * @var ?int $pageSize
     */
    #[SpeakeasyMetadata('queryParam:style=form,explode=true,name=pageSize')]
    public ?int $pageSize = null;

    /**
     * Sort results using a field name and order (ascending or descending). 
     *
     * Format: `<field>:<order>`, where `<field>` is the field name and `<order>` is either `asc` or `desc`.
     *
     *
     * @var ?string $sort
     */
    #[SpeakeasyMetadata('queryParam:style=form,explode=true,name=sort')]
    public ?string $sort = null;

    /**
     * @param  array<string, mixed>  $requestBody
     * @param  ?string  $cursor
     * @param  ?int  $pageSize
     * @param  ?string  $sort
     * @phpstan-pure
     */
    public function __construct(array $requestBody, ?string $cursor = null, ?int $pageSize = null, ?string $sort = null)
    {
        $this->requestBody = $requestBody;
        $this->cursor = $cursor;
        $this->pageSize = $pageSize;
        $this->sort = $sort;
    }
}