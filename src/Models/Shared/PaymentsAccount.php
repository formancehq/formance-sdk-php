<?php

/**
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

declare(strict_types=1);

namespace formance\stack\Models\Shared;


class PaymentsAccount
{
    /**
     *
     * @var string $accountName
     */
    #[\Speakeasy\Serializer\Annotation\SerializedName('accountName')]
    public string $accountName;

    /**
     *
     * @var string $connectorID
     */
    #[\Speakeasy\Serializer\Annotation\SerializedName('connectorID')]
    public string $connectorID;

    /**
     *
     * @var \DateTime $createdAt
     */
    #[\Speakeasy\Serializer\Annotation\SerializedName('createdAt')]
    public \DateTime $createdAt;

    /**
     *
     * @var string $defaultAsset
     */
    #[\Speakeasy\Serializer\Annotation\SerializedName('defaultAsset')]
    public string $defaultAsset;

    /**
     *
     * @var string $defaultCurrency
     * @deprecated  field: This will be removed in a future release, please migrate away from it as soon as possible.
     */
    #[\Speakeasy\Serializer\Annotation\SerializedName('defaultCurrency')]
    public string $defaultCurrency;

    /**
     *
     * @var string $id
     */
    #[\Speakeasy\Serializer\Annotation\SerializedName('id')]
    public string $id;

    /**
     *
     * @var string $reference
     */
    #[\Speakeasy\Serializer\Annotation\SerializedName('reference')]
    public string $reference;

    /**
     *
     * @var AccountType $type
     */
    #[\Speakeasy\Serializer\Annotation\SerializedName('type')]
    #[\Speakeasy\Serializer\Annotation\Type('\formance\stack\Models\Shared\AccountType')]
    public AccountType $type;

    /**
     * $metadata
     *
     * @var ?array<string, string> $metadata
     */
    #[\Speakeasy\Serializer\Annotation\SerializedName('metadata')]
    #[\Speakeasy\Serializer\Annotation\Type('array<string, string>|null')]
    public ?array $metadata;

    /**
     * $pools
     *
     * @var ?array<string> $pools
     */
    #[\Speakeasy\Serializer\Annotation\SerializedName('pools')]
    #[\Speakeasy\Serializer\Annotation\Type('array<string>|null')]
    #[\Speakeasy\Serializer\Annotation\SkipWhenNull]
    public ?array $pools = null;

    /**
     *
     * @var ?string $provider
     */
    #[\Speakeasy\Serializer\Annotation\SerializedName('provider')]
    #[\Speakeasy\Serializer\Annotation\SkipWhenNull]
    public ?string $provider = null;

    /**
     *
     * @var ?PaymentsAccountRaw $raw
     */
    #[\Speakeasy\Serializer\Annotation\SerializedName('raw')]
    #[\Speakeasy\Serializer\Annotation\Type('\formance\stack\Models\Shared\PaymentsAccountRaw|null')]
    public ?PaymentsAccountRaw $raw;

    /**
     * @param  string  $accountName
     * @param  string  $connectorID
     * @param  \DateTime  $createdAt
     * @param  string  $defaultAsset
     * @param  string  $defaultCurrency
     * @param  string  $id
     * @param  string  $reference
     * @param  AccountType  $type
     * @param  ?array<string, string>  $metadata
     * @param  ?array<string>  $pools
     * @param  ?string  $provider
     * @param  ?PaymentsAccountRaw  $raw
     * @phpstan-pure
     */
    public function __construct(string $accountName, string $connectorID, \DateTime $createdAt, string $defaultAsset, string $defaultCurrency, string $id, string $reference, AccountType $type, ?array $metadata = null, ?array $pools = null, ?string $provider = null, ?PaymentsAccountRaw $raw = null)
    {
        $this->accountName = $accountName;
        $this->connectorID = $connectorID;
        $this->createdAt = $createdAt;
        $this->defaultAsset = $defaultAsset;
        $this->defaultCurrency = $defaultCurrency;
        $this->id = $id;
        $this->reference = $reference;
        $this->type = $type;
        $this->metadata = $metadata;
        $this->pools = $pools;
        $this->provider = $provider;
        $this->raw = $raw;
    }
}