<?php

/**
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

declare(strict_types=1);

namespace formance\stack\Models\Shared;


class WorkflowInstanceHistoryStageInput
{
    /**
     *
     * @var ?ActivityAddAccountMetadata $addAccountMetadata
     */
    #[\Speakeasy\Serializer\Annotation\SerializedName('AddAccountMetadata')]
    #[\Speakeasy\Serializer\Annotation\Type('\formance\stack\Models\Shared\ActivityAddAccountMetadata|null')]
    #[\Speakeasy\Serializer\Annotation\SkipWhenNull]
    public ?ActivityAddAccountMetadata $addAccountMetadata = null;

    /**
     *
     * @var ?ActivityConfirmHold $confirmHold
     */
    #[\Speakeasy\Serializer\Annotation\SerializedName('ConfirmHold')]
    #[\Speakeasy\Serializer\Annotation\Type('\formance\stack\Models\Shared\ActivityConfirmHold|null')]
    #[\Speakeasy\Serializer\Annotation\SkipWhenNull]
    public ?ActivityConfirmHold $confirmHold = null;

    /**
     *
     * @var ?ActivityCreateTransaction $createTransaction
     */
    #[\Speakeasy\Serializer\Annotation\SerializedName('CreateTransaction')]
    #[\Speakeasy\Serializer\Annotation\Type('\formance\stack\Models\Shared\ActivityCreateTransaction|null')]
    #[\Speakeasy\Serializer\Annotation\SkipWhenNull]
    public ?ActivityCreateTransaction $createTransaction = null;

    /**
     *
     * @var ?ActivityCreditWallet $creditWallet
     */
    #[\Speakeasy\Serializer\Annotation\SerializedName('CreditWallet')]
    #[\Speakeasy\Serializer\Annotation\Type('\formance\stack\Models\Shared\ActivityCreditWallet|null')]
    #[\Speakeasy\Serializer\Annotation\SkipWhenNull]
    public ?ActivityCreditWallet $creditWallet = null;

    /**
     *
     * @var ?ActivityDebitWallet $debitWallet
     */
    #[\Speakeasy\Serializer\Annotation\SerializedName('DebitWallet')]
    #[\Speakeasy\Serializer\Annotation\Type('\formance\stack\Models\Shared\ActivityDebitWallet|null')]
    #[\Speakeasy\Serializer\Annotation\SkipWhenNull]
    public ?ActivityDebitWallet $debitWallet = null;

    /**
     *
     * @var ?ActivityGetAccount $getAccount
     */
    #[\Speakeasy\Serializer\Annotation\SerializedName('GetAccount')]
    #[\Speakeasy\Serializer\Annotation\Type('\formance\stack\Models\Shared\ActivityGetAccount|null')]
    #[\Speakeasy\Serializer\Annotation\SkipWhenNull]
    public ?ActivityGetAccount $getAccount = null;

    /**
     *
     * @var ?ActivityGetPayment $getPayment
     */
    #[\Speakeasy\Serializer\Annotation\SerializedName('GetPayment')]
    #[\Speakeasy\Serializer\Annotation\Type('\formance\stack\Models\Shared\ActivityGetPayment|null')]
    #[\Speakeasy\Serializer\Annotation\SkipWhenNull]
    public ?ActivityGetPayment $getPayment = null;

    /**
     *
     * @var ?ActivityGetWallet $getWallet
     */
    #[\Speakeasy\Serializer\Annotation\SerializedName('GetWallet')]
    #[\Speakeasy\Serializer\Annotation\Type('\formance\stack\Models\Shared\ActivityGetWallet|null')]
    #[\Speakeasy\Serializer\Annotation\SkipWhenNull]
    public ?ActivityGetWallet $getWallet = null;

    /**
     *
     * @var ?ActivityListWallets $listWallets
     */
    #[\Speakeasy\Serializer\Annotation\SerializedName('ListWallets')]
    #[\Speakeasy\Serializer\Annotation\Type('\formance\stack\Models\Shared\ActivityListWallets|null')]
    #[\Speakeasy\Serializer\Annotation\SkipWhenNull]
    public ?ActivityListWallets $listWallets = null;

    /**
     *
     * @var ?ActivityRevertTransaction $revertTransaction
     */
    #[\Speakeasy\Serializer\Annotation\SerializedName('RevertTransaction')]
    #[\Speakeasy\Serializer\Annotation\Type('\formance\stack\Models\Shared\ActivityRevertTransaction|null')]
    #[\Speakeasy\Serializer\Annotation\SkipWhenNull]
    public ?ActivityRevertTransaction $revertTransaction = null;

    /**
     *
     * @var ?ActivityStripeTransfer $stripeTransfer
     */
    #[\Speakeasy\Serializer\Annotation\SerializedName('StripeTransfer')]
    #[\Speakeasy\Serializer\Annotation\Type('\formance\stack\Models\Shared\ActivityStripeTransfer|null')]
    #[\Speakeasy\Serializer\Annotation\SkipWhenNull]
    public ?ActivityStripeTransfer $stripeTransfer = null;

    /**
     *
     * @var ?ActivityVoidHold $voidHold
     */
    #[\Speakeasy\Serializer\Annotation\SerializedName('VoidHold')]
    #[\Speakeasy\Serializer\Annotation\Type('\formance\stack\Models\Shared\ActivityVoidHold|null')]
    #[\Speakeasy\Serializer\Annotation\SkipWhenNull]
    public ?ActivityVoidHold $voidHold = null;

    /**
     * @param  ?ActivityAddAccountMetadata  $addAccountMetadata
     * @param  ?ActivityConfirmHold  $confirmHold
     * @param  ?ActivityCreateTransaction  $createTransaction
     * @param  ?ActivityCreditWallet  $creditWallet
     * @param  ?ActivityDebitWallet  $debitWallet
     * @param  ?ActivityGetAccount  $getAccount
     * @param  ?ActivityGetPayment  $getPayment
     * @param  ?ActivityGetWallet  $getWallet
     * @param  ?ActivityListWallets  $listWallets
     * @param  ?ActivityRevertTransaction  $revertTransaction
     * @param  ?ActivityStripeTransfer  $stripeTransfer
     * @param  ?ActivityVoidHold  $voidHold
     * @phpstan-pure
     */
    public function __construct(?ActivityAddAccountMetadata $addAccountMetadata = null, ?ActivityConfirmHold $confirmHold = null, ?ActivityCreateTransaction $createTransaction = null, ?ActivityCreditWallet $creditWallet = null, ?ActivityDebitWallet $debitWallet = null, ?ActivityGetAccount $getAccount = null, ?ActivityGetPayment $getPayment = null, ?ActivityGetWallet $getWallet = null, ?ActivityListWallets $listWallets = null, ?ActivityRevertTransaction $revertTransaction = null, ?ActivityStripeTransfer $stripeTransfer = null, ?ActivityVoidHold $voidHold = null)
    {
        $this->addAccountMetadata = $addAccountMetadata;
        $this->confirmHold = $confirmHold;
        $this->createTransaction = $createTransaction;
        $this->creditWallet = $creditWallet;
        $this->debitWallet = $debitWallet;
        $this->getAccount = $getAccount;
        $this->getPayment = $getPayment;
        $this->getWallet = $getWallet;
        $this->listWallets = $listWallets;
        $this->revertTransaction = $revertTransaction;
        $this->stripeTransfer = $stripeTransfer;
        $this->voidHold = $voidHold;
    }
}