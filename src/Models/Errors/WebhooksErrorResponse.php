<?php

/**
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

declare(strict_types=1);

namespace formance\stack\Models\Errors;

use formance\stack\Models\Shared;
use formance\stack\Utils;
/** WebhooksErrorResponse - Error */
class WebhooksErrorResponse
{
    /**
     *
     * @var ?string $details
     */
    #[\JMS\Serializer\Annotation\SerializedName('details')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $details = null;

    /**
     *
     * @var Shared\WebhooksErrorsEnum $errorCode
     */
    #[\JMS\Serializer\Annotation\SerializedName('errorCode')]
    #[\JMS\Serializer\Annotation\Type('\formance\stack\Models\Shared\WebhooksErrorsEnum')]
    public Shared\WebhooksErrorsEnum $errorCode;

    /**
     *
     * @var string $errorMessage
     */
    #[\JMS\Serializer\Annotation\SerializedName('errorMessage')]
    public string $errorMessage;

    /**
     * @param  ?Shared\WebhooksErrorsEnum  $errorCode
     * @param  ?string  $errorMessage
     * @param  ?string  $details
     */
    public function __construct(?Shared\WebhooksErrorsEnum $errorCode = null, ?string $errorMessage = null, ?string $details = null)
    {
        $this->errorCode = $errorCode;
        $this->errorMessage = $errorMessage;
        $this->details = $details;
    }

    public function toException(): WebhooksErrorResponseThrowable
    {
        $serializer = Utils\JSON::createSerializer();
        $message = $serializer->serialize($this, 'json');
        $code = -1;

        return new WebhooksErrorResponseThrowable($message, (int) $code, $this);
    }
}